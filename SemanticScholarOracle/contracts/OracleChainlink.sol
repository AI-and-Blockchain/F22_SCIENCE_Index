// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@chainlink/contracts/src/v0.8/ChainlinkClient.sol";


contract OracleChainlink is ChainlinkClient {
    using Chainlink for Chainlink.Request;

    uint256 public H_Index;
    uint256 public CareerLength;
    uint256 public PublicationCount;
    uint256 public CitationCount;

    address private Oracle;
    bytes32 private JobId;
    uint256 private Fee; 

    constructor() public {
        setChainlinkToken(0x326C977E6efc84E512bB9C30f76E30c160eD06FB);
        setChainlinkOracle("<include chainlink node address>");
        Oracle = "<include chainlink node address>";
        JobId = "<include job id generated by Chainlink node with Job.TOML";
        Fee = .1 * 10 ** 18;
    }

    function RequestH_index(string memory author_id) public returns (bytes32 Reqid) {
        Chainlink.Request memory Req = buildChainlinkRequest(JobId, address(this), this.fulfill.selector);
        Req.add("SemanticScholarId", author_id);
        return sendChainlinkRequestTo(Oracle, Req, Fee);        
    }
    
    function fulfill(bytes32 Reqid, uint256 _Hindex, uint256 _CareerLength, uint256 _PublicationCount, uint256 _CitationCount) public recordChainlinkFulfillment(Reqid) {
        H_Index = _Hindex;
        CareerLength = _CareerLength;
        PublicationCount = _PublicationCount;
        CitationCount = _CitationCount;
    }
}